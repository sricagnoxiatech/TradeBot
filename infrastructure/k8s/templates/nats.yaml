apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
    - name: nats
      port: 4222
    - name: ws
      port: 8080
    - name: monitor
      port: 8222
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nats-jetstream-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: nats
  template:
    metadata:
      labels:
        app: nats
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecret }}
      volumes:
        - name: nats-jetstream
          persistentVolumeClaim:
            claimName: nats-jetstream-pvc
      containers:
        - name: nats
          image: {{ .Values.images.nats }}
          command:
            - "nats-server"
            - "--config=nats.conf"
          ports:
            - containerPort: 4222
              name: nats
            - containerPort: 8080
              name: ws
            - containerPort: 8222
              name: monitor
          env:
            - name: USER
              value: "{{ .Values.env.nats.USER }}"
            - name: PASS
              value: "{{ .Values.env.nats.PASS }}"
          volumeMounts:
            - name: nats-jetstream
              mountPath: /data
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /
              port: monitor
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: monitor
            initialDelaySeconds: 15
            periodSeconds: 20